// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jemwnyrrjuffecuwntzw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImplbXdueXJyanVmZmVjdXdudHp3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY4NDM2NTEsImV4cCI6MjA2MjQxOTY1MX0.-4fBRJGA7R9SrjiDqB8ZZYKf_SywkQNy6n6-4zU9j90";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a custom type that extends the Database type with the new tables we've created
export type ExtendedDatabase = Database & {
  public: {
    Tables: {
      challenges: {
        Row: {
          id: string;
          title: string;
          description: string;
          type: string;
          goal: number;
          points: number;
          active: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          title: string;
          description: string;
          type: string;
          goal: number;
          points: number;
          active?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          title?: string;
          description?: string;
          type?: string;
          goal?: number;
          points?: number;
          active?: boolean;
          created_at?: string;
        };
      };
      challenge_progress: {
        Row: {
          id: string;
          user_id: string;
          challenge_id: string;
          progress: number;
          completed: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          challenge_id: string;
          progress?: number;
          completed?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          challenge_id?: string;
          progress?: number;
          completed?: boolean;
          created_at?: string;
        };
      };
      user_streaks: {
        Row: {
          id: string;
          user_id: string;
          current_streak: number;
          last_completed_at: string | null;
          points_today: number;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          current_streak?: number;
          last_completed_at?: string | null;
          points_today?: number;
          created_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          current_streak?: number;
          last_completed_at?: string | null;
          points_today?: number;
          created_at?: string;
        };
      };
      badges: {
        Row: {
          id: string;
          name: string;
          description: string;
          icon: string;
          requirement: string;
          code: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          description: string;
          icon: string;
          requirement: string;
          code: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string;
          icon?: string;
          requirement?: string;
          code?: string;
          created_at?: string;
        };
      };
      user_badges: {
        Row: {
          id: string;
          user_id: string;
          badge_id: string;
          achieved_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          badge_id: string;
          achieved_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          badge_id?: string;
          achieved_at?: string;
        };
      };
      tiktok_videos: {
        Row: {
          id: string;
          user_id: string;
          video_id: string;
          title: string;
          views: number;
          likes: number;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          video_id: string;
          title: string;
          views?: number;
          likes?: number;
          created_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          video_id?: string;
          title?: string;
          views?: number;
          likes?: number;
          created_at?: string;
        };
      };
      user_statistics: {
        Row: {
          user_id: string;
          points: number;
          followers_gained: number;
          ideas_generated: number;
          analyses_completed: number;
          videos_shared: number;
          daily_challenges_completed: number;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          user_id: string;
          points?: number;
          followers_gained?: number;
          ideas_generated?: number;
          analyses_completed?: number;
          videos_shared?: number;
          daily_challenges_completed?: number;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          user_id?: string;
          points?: number;
          followers_gained?: number;
          ideas_generated?: number;
          analyses_completed?: number;
          videos_shared?: number;
          daily_challenges_completed?: number;
          created_at?: string;
          updated_at?: string;
        };
      };
    } & Database['public']['Tables'];
  };
};

export const supabase = createClient<ExtendedDatabase>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
